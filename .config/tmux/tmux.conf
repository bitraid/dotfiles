set-option -ags terminal-features ",foot:RGB"
set-option -gs editor nvim
set-option -gs escape-time 0

set-option -g base-index 1
set-option -g default-command "exec /usr/bin/fish"
set-option -g default-shell /usr/bin/fish
set-option -g display-panes-active-colour yellow
set-option -g display-panes-colour cyan
set-option -g display-panes-time 9000
set-option -g display-time 0
set-option -g history-limit 50000
set-option -g message-style fg=brightred,bg=black
set-option -g mouse off
set-option -g pane-active-border-style fg=black,bg=brightyellow
set-option -g pane-border-style fg=brightyellow,bg=black
set-option -g prefix C-space
set-option -g renumber-windows on
set-option -g status-interval 2
set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-left-length 40
set-option -g status-left "#{?client_prefix,#[fg=brightwhite#,bold#,bg=green],#[fg=black#,bold#,bg=brightcyan]} #S #[default,bg=brightyellow,fg=brightblack] #T "
set-option -g status-right "#[bg=brightyellow,fg=brightblack] %F #[bg=brightcyan,fg=black] %R "
set-option -g status-right-length 20
set-option -g status-style fg=yellow,bg=black

set-option -gw aggressive-resize on
set-option -gw clock-mode-colour green
set-option -gw clock-mode-style 24
set-option -gw mode-keys vi
set-option -gw monitor-activity on
set-option -gw pane-base-index 1
set-option -gw set-titles on
set-option -gw window-status-activity-style fg=brightblue,bg=default
set-option -gw window-status-bell-style fg=brightcyan,bg=default
set-option -gw window-status-current-format "#[fg=white,#{?pane_in_mode,bg=yellow,bg=brightyellow}] #I:[#W]#F#P "
set-option -gw window-status-current-style fg=green,bg=default
set-option -gw window-status-format "#I:[#W]#F"
set-option -gw window-status-style fg=brightgreen,bg=default

unbind-key C-b
bind-key C-space send-prefix

unbind-key Space
bind-key Space last-window

unbind-key c
bind-key c new-window
bind-key M-c new-window "exec fish -P"
bind-key C new-window -c "#{pane_current_path}"

unbind-key '"'
unbind-key n
bind-key n split-window -v
bind-key C-n split-window -v -b
bind-key M-n split-window -v "exec fish -P"
bind-key N split-window -v -c "#{pane_current_path}"

unbind-key %
unbind-key v
bind-key v split-window -h
bind-key C-v split-window -h -b
bind-key M-v split-window -h "exec fish -P"
bind-key V split-window -h -c "#{pane_current_path}"

bind-key u last-pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R
bind-key -r M-h resize-pane -L 5
bind-key -r M-j resize-pane -D 5
bind-key -r M-k resize-pane -U 5
bind-key -r M-l resize-pane -R 5
bind-key -r C-j select-pane -t :.+
bind-key -r C-k select-pane -t :.-
bind-key -r C-l next-window
bind-key -r C-h previous-window
bind-key / command-prompt -p "search:" "find-window '%%'"
bind-key m command-prompt -p "monitor:" "set -gw monitor-content '%%'"

bind-key Escape copy-mode
bind-key C-u copy-mode -u
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi C-y send -X copy-selection \; run "tmux show-buffer | wl-copy; tmux show-buffer | wl-copy -p"
bind-key -T copy-mode-vi M-y send -X copy-selection \; run "tmux show-buffer | wl-copy"
bind-key -T copy-mode-vi Y send -X copy-selection \; run "tmux show-buffer | wl-copy -p"
bind-key -T copy-mode-vi Space send -X halfpage-down
bind-key -T copy-mode-vi Bspace send -X halfpage-up
bind-key C-y run "tmux show-buffer | wl-copy; tmux show-buffer | wl-copy -p"
bind-key M-y run "tmux show-buffer | wl-copy"
bind-key Y run "tmux show-buffer | wl-copy -p"

unbind-key p
bind-key p paste-buffer
bind-key C-p choose-buffer
bind-key M-p run 'tmux set-buffer -- "$(wl-paste)"; tmux paste-buffer'
bind-key P run 'tmux set-buffer -- "$(wl-paste -p)"; tmux paste-buffer'
